// This file has been autogenerated from a class added in the UI designer.

using AppKit;
using Microsoft.Extensions.DependencyInjection;
using SoundCharts.Explorer.MacOS.Views.SourceList;
using SoundCharts.Explorer.MacOS.Services.Tilesets;
using System;
using SoundCharts.Explorer.MacOS.Services.State;
using SoundCharts.Explorer.MacOS.Services.Collections;
using SoundCharts.Explorer.MacOS.Views.SourceList.Model;

namespace SoundCharts.Explorer.MacOS
{
	public partial class SourceListViewController : NSViewController
	{
        private ExplorerTreeDataProvider? treeDataProvider;
        private SourceListTreeDataSource<ExplorerItem>? dataSource;
        private SourceListDelegate? @delegate;

        private bool sourceListInitialized;

		public SourceListViewController (IntPtr handle) : base (handle)
		{
		}

        public override void AwakeFromNib()
        {
            base.AwakeFromNib();

            if (!this.sourceListInitialized)
            {
                this.treeDataProvider = new ExplorerTreeDataProvider(
                    AppDelegate.Services.GetRequiredService<IApplicationStateManager>(),
                    AppDelegate.Services.GetRequiredService<IChartCollectionManager>(),
                    AppDelegate.Services.GetRequiredService<ITilesetManager>());
                this.dataSource = new SourceListTreeDataSource<ExplorerItem>(this.treeDataProvider);
                this.@delegate = new SourceListDelegate();

                this.sourceListView.Initialize(this.dataSource, this.@delegate);

                this.sourceListInitialized = true;
            }
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);

            // NOTE: Dispose after controller itself to ensure dependent views are disposed.

            this.dataSource?.Dispose();
            this.treeDataProvider?.Dispose();
            this.@delegate?.Dispose();
        }
    }
}
