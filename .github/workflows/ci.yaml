name: Build SoundCharts Explorer

on: [push]

env:
  REGISTRY: soundcharts.azurecr.io

jobs:
  cli-build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2   

    - name: Setup .NET SDK 6.0.x
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'
   
    - name: Install Dependencies
      run: |
        dotnet restore src/SoundCharts.Explorer.Cli/SoundCharts.Explorer.Cli.csproj

    - name: Build
      run: |
        dotnet build src/SoundCharts.Explorer.Cli/SoundCharts.Explorer.Cli.csproj --configuration Release

  services-build:

    runs-on: ubuntu-latest

    outputs:
      ingress-tag: ${{ steps.tags.outputs.ingress-tag }}
      tile-service-tag: ${{ steps.tags.outputs.tile-service-tag }}
      tileset-service-tag: ${{ steps.tags.outputs.tileset-service-tag }}

    steps:
    - name: Generate build ID
      id: build-id
      run: |
        branch=${GITHUB_REF##*/}
        sha=${GITHUB_SHA::8}
        ts=$(date +"%Y-%m-%dT%H-%M-%SZ")
        echo "::set-output name=build-id::${branch}-${ts}-SHA${sha}"

    - name: Generate service tags
      id: tags
      run: |
        echo "::set-output name=ingress-tag::ingress:${{ steps.build-id.outputs.build-id }}"
        echo "::set-output name=tile-service-tag::tile-service:${{ steps.build-id.outputs.build-id }}"
        echo "::set-output name=tileset-service-tag::tileset-service:${{ steps.build-id.outputs.build-id }}"

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to ACR
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build ingress
      uses: docker/build-push-action@v2
      with:
        file: src/SoundCharts.Explorer.Ingress/Dockerfile
        push: true
        tags: ${{ env.REGISTRY }}/${{ steps.tags.outputs.ingress-tag }}

    - name: Build tile-service
      uses: docker/build-push-action@v2
      with:
        file: src/SoundCharts.Explorer.TileService/Dockerfile
        push: true
        tags: ${{ env.REGISTRY }}/${{ steps.tags.outputs.tile-service-tag }}

    - name: Build tileset-service
      uses: docker/build-push-action@v2
      with:
        file: src/SoundCharts.Explorer.TilesetService/Dockerfile
        push: true
        tags: ${{ env.REGISTRY }}/${{ steps.tags.outputs.tileset-service-tag }}

  services-deploy:

    env:
      RESOURCE_GROUP: sound-charts

    needs: services-build

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy bicep
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az deployment group create \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --template-file ./infra/main.bicep \
            --parameters \
              environmentName='sound-charts' \
              ingressTag='${{ env.REGISTRY }}/${{ needs.services-build.outputs.ingress-tag }}' \
              tileServiceTag='${{ env.REGISTRY }}/${{ needs.services-build.outputs.tile-service-tag }}' \
              tilesetServiceAccountKey='${{ secrets.SOUNDCHARTS_TILESET_SERVICE_ACCOUNT_KEY }}' \
              tilesetServiceAccountName='${{ secrets.SOUNDCHARTS_TILESET_SERVICE_ACCOUNT_NAME }}' \
              tilesetServiceConnectionString='${{ secrets.SOUNDCHARTS_TILESET_SERVICE_CONNECTION_STRING }}' \
              tilesetServiceTag='${{ env.REGISTRY }}/${{ needs.services-build.outputs.tileset-service-tag }}'

  mac-build:

    runs-on: macos-11

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2   

    - name: Setup .NET SDK 6.0.x
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'

    - name: Set default Xamarin SDK versions
      run: |
        $VM_ASSETS/select-xamarin-sdk-v2.sh --mono=6.12 --mac=8.2
    
    - name: Install Dependencies
      run: |
        nuget restore src/SoundCharts.Explorer.Common/SoundCharts.Explorer.Common.csproj -SolutionDirectory src
        nuget restore src/SoundCharts.Explorer.MacOS/SoundCharts.Explorer.MacOS.csproj -SolutionDirectory src
        nuget restore src/SoundCharts.Explorer.ManagedLogging/SoundCharts.Explorer.ManagedLogging.csproj -SolutionDirectory src

    - name: Build
      run: msbuild src/SoundCharts.Explorer.MacOS/SoundCharts.Explorer.MacOS.csproj /p:Configuration=Release /t:Rebuild

    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v2
      with:
        name: packages
        path: "src/SoundCharts.Explorer.MacOS/bin/Release/SoundCharts Explorer-1.0.pkg"
